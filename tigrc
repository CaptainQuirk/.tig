# vim: set ft=dosini:

# Settings
# --------

set main-view = id:yes date:custom author:abbreviated commit-title:yes,graph=yes
set main-view-date-format = "%Y-%m-%d %H:%M"

set show-changes = yes
set tab-size = 4
set line-graphics = utf-8


# Bindings
# --------

# MAIN VIEW

# Perform a reset on commit for main file
bind main <Ctrl-r> !git reset --mixed %(commit)

# REFS VIEW
bind refs <Ctrl-x> !git push origin :%(branch)
bind refs B !git checkout -b %(branch) %(remote)/%(branch)

# GIT FLOW
bind main    F none
bind generic F none

# General
bind generic Fi ?git flow init

# Feature
bind generic Ffl !git flow feature
bind generic Ffs !git flow feature start "%(prompt New feature name: )"
bind generic Fff ?sh -c "git flow feature finish `echo %(repo:head) | sed -e s/feature.//`"
bind refs    Fff ?sh -c "git flow feature finish `echo %(branch) | sed -e s/feature.//`"

# Release
bind generic Frl !git flow release
bind generic Frs !git flow release start "%(prompt New release name: )"
bind generic Frf ?sh -c "git flow release finish `echo %(repo:head) | sed -e s/release.//`"
bind refs    Frf ?sh -c "git flow release finish `echo %(branch) | sed -e s/release.//`"

# Hot Fix
bind generic Fhl !git flow hotfix
bind generic Fhs !git flow hotfix start "%(prompt New hotfix name: )"
bind generic Fhf ?sh -c "git flow hotfix finish `echo %(repo:head) | sed -e s/hotfix.//`"
bind refs    Fhf ?sh -c "git flow hotfix finish `echo %(branch) | sed -e s/hotfix.//`"

# Support
bind generic Fsl !git flow support
bind refs    Fss !git flow support start "%(prompt New support name: )" %(branch)
